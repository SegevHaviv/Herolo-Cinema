{"version":3,"sources":["constants/ActionTypes.js","actions/index.js","constants/Strings.js","containers/CustomNavbarContainer.js","components/DeleteConfirmation.js","containers/DeleteConfirmationContainer.js","components/MovieForm.js","components/MovieFormModal.js","containers/MovieFormContainer.js","components/Movie.js","components/MoviesWrapper.js","constants/MovieTitles.js","api/index.js","containers/MovieContainer.js","containers/Home.js","App.js","reducers/MoviesReducer.js","reducers/DeleteConfirmationReducer.js","reducers/index.js","reducers/MovieFormReducer.js","index.js"],"names":["ADD_MOVIE","ADD_MOVIES_LIST","REMOVE_MOVIE","TOGGLE_IS_FETCHING","UPDATE_MOVIE","RESET_EDIT_SELECTED_ID","TOGGLE_DELETE_CONFIRM","TOGGLE_SET_IS_OPEN","TOGGLE_MOVIE_FORM","SELECT_FOR_EDIT","toggleSetIsOpen","type","ActionTypes","toggleIsFetching","toggleDeleteConfirm","id","payload","selectedId","toggleMovieForm","updateMovie","movie","resetEditSelectedId","selectForEdit","addMovie","addMoviesList","moviesList","removeMovie","EDIT_BUTTON_TEXT","REMOVE_BUTTON_TEXT","ADD_BUTTON_TEXT","HEADLINE_TEXT","styles","navBarTitleContainer","_navBarTitleContainer","Object","defineProperty","marginLeft","navBarTitle","fontSize","color","cursor","addButton","_addButton","marginRight","CustomNavbarContainerWithStyles","withStyles","props","classes","react_default","a","createElement","Navbar","bg","Brand","className","Button","variant","onClick","window","location","reload","connect","state","showMovieForm","MovieFormReducer","dispatch","bindActionCreators","DeleteConfirmation","handleClose","_this","handleDelete","_this$props","this","isOpen","selectedTitle","Modal","show","onHide","Header","closeButton","Title","Body","Footer","Component","DeleteConfirmationContainer","components_DeleteConfirmation","_state$MoviesReducer","MoviesReducer","selectedIdToDelete","items","DeleteConfirmationReducer","selectedMovieToDelete","find","x","title","FormikApp","withFormik","mapPropsToValues","_ref","selectedMovieToEdit","director","genre","year","runtime","handleSubmit","values","bag","sentence","_bag$props","setErrors","split","map","element","replace","charAt","toUpperCase","slice","toLowerCase","join","validationSchema","Yup","shape","required","min","max","Date","getFullYear","integer","positive","formik_esm","form","name","formField","placeholder","buttonsContainer","submitButton","cancelButton","width","marginBottom","textAlign","display","flex","MovieFormModal","buttonLabel","center","components_MovieForm","MovieFormContainer","components_MovieFormModal","selectedIdToEdit","item","background","editButton","movieCard","margin","_props$movie","Card","Text","strings","MoviesWrapper","container","length","noMoviesText","Row_default","moviesCardsContainer","components_Movie","key","justifyContent","MovieTitles","BASE_URL","API_GET_BY_TITLE_QUERY","API_KEY","_callee","movieTitles","fetchedMovies","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","movieTitle","regenerator_default","wrap","_context","prev","next","undefined","abrupt","Symbol","iterator","done","value","fetch","concat","then","res","json","result","currentMovie","Director","Genre","Year","Runtime","push","t0","return","finish","stop","MovieContainer","_x","_fetchMovies","apply","arguments","fetchMovies","_this$props2","isFetching","loadingText","components_MoviesWrapper","containers_DeleteConfirmationContainer","containers_MovieFormContainer","MovieContainerWithStyles","Home","root","containers_MovieContainer","HomeWithStyles","height","App","containers_CustomNavbarContainer","containers_Home","formatSentence","allReducers","combineReducers","action","objectSpread","uuidv4","moviesWithId","err","filter","store","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.40e8d397.chunk.js","sourcesContent":["/******** Movies **********/\r\nexport const ADD_MOVIE = 'ADD_MOVIE'\r\nexport const ADD_MOVIES_LIST = 'ADD_MOVIES_LIST'\r\nexport const REMOVE_MOVIE = 'REMOVE_MOVIE'\r\nexport const EDIT_MOVIE = 'EDIT_MOVIE'\r\n\r\n/******** Movies **********/\r\nexport const TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nexport const DELETE_CONFIRM = 'DELETE_CONFIRM'\r\nexport const UPDATE_MOVIE = 'UPDATE_MOVIE'\r\nexport const RESET_SELECTED_ID = 'RESET_SELECTED_ID'\r\nexport const RESET_EDIT_SELECTED_ID = 'RESET_SELECTED_ID'\r\n\r\n\r\n/******** Delete Confirmation **********/\r\nexport const TOGGLE_DELETE_CONFIRM = 'TOGGLE_DELETE_CONFIRM'\r\nexport const TOGGLE_SET_IS_OPEN = 'TOGGLE_SET_IS_OPEN'\r\n\r\n\r\n/******** Movie Form **********/\r\nexport const TOGGLE_MOVIE_FORM = 'TOGGLE_MOVIE_FORM'\r\nexport const SELECT_FOR_EDIT = 'SELECT_FOR_EDIT'\r\n","import * as ActionTypes from '../constants/ActionTypes'\r\n\r\n// Delete Confirmation\r\nexport function toggleSetIsOpen() {\r\n    return {\r\n        type: ActionTypes.TOGGLE_SET_IS_OPEN,\r\n    }\r\n}\r\n\r\nexport function toggleIsFetching() {\r\n    return {\r\n        type: ActionTypes.TOGGLE_IS_FETCHING,\r\n    }\r\n}\r\n\r\n\r\nexport function toggleDeleteConfirm(id) {\r\n    return {\r\n        type: ActionTypes.TOGGLE_DELETE_CONFIRM,\r\n        payload: {\r\n            selectedId: id,\r\n        }\r\n    }\r\n}\r\n\r\nexport function resetSelectedId() {\r\n    return {\r\n        type: ActionTypes.RESET_SELECTED_ID,\r\n    }\r\n}\r\n\r\n// MOVIE FORM\r\n\r\nexport function toggleMovieForm() {\r\n    return {\r\n        type: ActionTypes.TOGGLE_MOVIE_FORM,\r\n    }\r\n}\r\n\r\nexport function updateMovie(movie) {\r\n    return {\r\n        type: ActionTypes.UPDATE_MOVIE,\r\n        payload: {\r\n            movie: movie,\r\n        }\r\n    }\r\n}\r\n\r\nexport function resetEditSelectedId() {\r\n    return {\r\n        type: ActionTypes.RESET_EDIT_SELECTED_ID,\r\n    }\r\n}\r\n\r\nexport function selectForEdit(id) {\r\n    return {\r\n        type: ActionTypes.SELECT_FOR_EDIT,\r\n        payload: {\r\n            selectedId: id,\r\n        }\r\n    }\r\n}\r\n\r\n// MOVIES\r\nexport function addMovie(movie) {\r\n    return {\r\n        type: ActionTypes.ADD_MOVIE,\r\n        payload: {\r\n            movie: movie\r\n        }\r\n    }\r\n}\r\n\r\nexport function addMoviesList(moviesList) {\r\n    return {\r\n        type: ActionTypes.ADD_MOVIES_LIST,\r\n        payload: {\r\n            moviesList: moviesList,\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeMovie() {\r\n    return {\r\n        type: ActionTypes.REMOVE_MOVIE,\r\n    }\r\n}\r\n\r\n","\r\n\r\n//BUTTONS\r\nexport const EDIT_BUTTON_TEXT = 'Edit'\r\nexport const REMOVE_BUTTON_TEXT = 'Remove'\r\nexport const ADD_BUTTON_TEXT = 'Add'\r\n\r\n\r\n//FORM PLACEHOLDERS\r\nexport const FORM_RUNTIME_PLACEHOLDER = 'Runtime'\r\nexport const FORM_GENRE_PLACEHOLDER = 'Genre'\r\nexport const FORM_TITLE_PLACEHOLDER = 'Title'\r\nexport const FORM_DIRECTOR_PLACEHOLDER = 'Director'\r\nexport const FORM_YEAR_PLACEHOLDER = 'Year'\r\n\r\n// CAPTIONS\r\nexport const NO_MOVIES_TEXT = 'Add a movie...'\r\nexport const LOADING_MOVIES_TEXT = 'Loading Movies...'\r\nexport const HEADLINE_TEXT = 'Herolo Cinema'","import React from 'react'\r\nimport { Navbar, Button } from 'react-bootstrap'\r\nimport withStyles from 'react-jss'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { toggleMovieForm } from '../actions'\r\nimport { ADD_BUTTON_TEXT, HEADLINE_TEXT } from '../constants/Strings'\r\n\r\nconst styles = {\r\n\r\n    navBarTitleContainer: {\r\n        ['@media (max-width:420px)']: { // eslint-disable-line no-useless-computed-key\r\n            marginLeft: 0,\r\n        },\r\n        marginLeft: 20,\r\n        flex: 1,\r\n    },\r\n\r\n    navBarTitle: {\r\n        fontSize: 28,\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n    },\r\n\r\n    addButton: {\r\n        ['@media (max-width:420px)']: { // eslint-disable-line no-useless-computed-key\r\n            marginRight: 5,\r\n        },\r\n        marginRight: 35,\r\n        fontSize: 25,\r\n        flex: 0.15,\r\n        color: \"white\"\r\n    }\r\n}\r\n\r\nfunction CustomNavbarContainer(props) {\r\n    const { classes } = props;\r\n    const { toggleMovieForm } = props;\r\n\r\n    function refreshPage() {\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"inherit\">\r\n            <Navbar.Brand\r\n                className={classes.navBarTitleContainer}>\r\n                <Button\r\n                    className={classes.navBarTitle}\r\n                    variant=\"inherit\"\r\n                    onClick={refreshPage}>\r\n                    {HEADLINE_TEXT}\r\n                </Button>\r\n            </Navbar.Brand>\r\n\r\n            <Button\r\n                type=\"submit\"\r\n                variant=\"inherit\"\r\n                className={classes.addButton}\r\n                onClick={toggleMovieForm}\r\n            >\r\n                {ADD_BUTTON_TEXT}\r\n            </Button>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nCustomNavbarContainer.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n}\r\n\r\n\r\nconst mapStatehToProps = (state) => {\r\n    const { MovieFormReducer: { showMovieForm } } = state;\r\n    return {\r\n        showMovieForm: showMovieForm\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({ toggleMovieForm }, dispatch)\r\n}\r\n\r\n\r\nconst CustomNavbarContainerWithStyles = withStyles(styles)(CustomNavbarContainer);\r\n\r\nexport default connect(mapStatehToProps, mapDispatchToProps)(CustomNavbarContainerWithStyles)","import React, { Component } from 'react'\r\nimport { Modal, Button } from 'react-bootstrap'\r\nclass DeleteConfirmation extends Component {\r\n\r\n    handleClose = () => {\r\n        const { toggleSetIsOpen } = this.props;\r\n        toggleSetIsOpen();\r\n    }\r\n\r\n    handleDelete = () => {\r\n        const { removeMovie } = this.props;\r\n        removeMovie();\r\n        this.handleClose();\r\n    }\r\n\r\n    render() {\r\n        const { isOpen, selectedTitle } = this.props\r\n        return (\r\n\r\n            <Modal show={isOpen} onHide={this.handleClose}>\r\n\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Confirmation</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    You sure you would like to delete {selectedTitle}?\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.handleDelete}>\r\n                        Confirm\r\n                    </Button>\r\n\r\n                    <Button variant=\"primary\" onClick={this.handleClose}>\r\n                        Cancel\r\n                    </Button>\r\n                </Modal.Footer>\r\n\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default DeleteConfirmation ","import React, { Component } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { toggleSetIsOpen, removeMovie } from '../actions'\r\nimport DeleteConfirmation from '../components/DeleteConfirmation'\r\n\r\nclass DeleteConfirmationContainer extends Component {\r\n    render() {\r\n        const { isOpen, toggleSetIsOpen, removeMovie, selectedTitle } = this.props;\r\n        return (\r\n            <DeleteConfirmation\r\n                isOpen={isOpen}\r\n                toggleSetIsOpen={toggleSetIsOpen}\r\n                removeMovie={removeMovie}\r\n                selectedTitle={selectedTitle} />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { selectedIdToDelete, items } = state.MoviesReducer\r\n    const { isOpen } = state.DeleteConfirmationReducer\r\n\r\n    const selectedMovieToDelete = selectedIdToDelete ?\r\n        items.find(x => x.id === selectedIdToDelete) : ''\r\n\r\n    const selectedTitle = selectedMovieToDelete ? selectedMovieToDelete.title : ''\r\n\r\n    return {\r\n        selectedTitle: selectedTitle,\r\n        isOpen: isOpen,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({ removeMovie, toggleSetIsOpen }, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteConfirmationContainer);","import React from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport * as Yup from 'yup';\r\nimport { withFormik, Form, Field, ErrorMessage } from 'formik'\r\nimport * as Strings from '../constants/Strings'\r\nimport withStyles from 'react-jss'\r\n\r\nconst styles = {\r\n    formField: {\r\n        width: \"80%\",\r\n        marginBottom: 20,\r\n    },\r\n    form: {\r\n        textAlign: \"center\"\r\n    },\r\n    buttonsContainer: {\r\n        display: \"flex\",\r\n    },\r\n    submitButton: {\r\n        flex: \"0.3\",\r\n        marginRight: \"auto\",\r\n\r\n    },\r\n    cancelButton: {\r\n        flex: \"0.3\"\r\n    }\r\n}\r\n\r\nconst MovieForm = (props) => {\r\n    const { handleClose, classes } = props\r\n    return (\r\n        <Form className={classes.form}>\r\n\r\n            <div><ErrorMessage name=\"title\" /></div>\r\n            <Field className={classes.formField} type=\"text\" name=\"title\" placeholder={Strings.FORM_TITLE_PLACEHOLDER} />\r\n\r\n            <div><ErrorMessage name=\"director\" /></div>\r\n            <Field className={classes.formField} type=\"text\" name=\"director\" placeholder={Strings.FORM_DIRECTOR_PLACEHOLDER} />\r\n\r\n            <div><ErrorMessage name=\"genre\" /></div>\r\n            <Field className={classes.formField} type=\"text\" name=\"genre\" placeholder={Strings.FORM_GENRE_PLACEHOLDER} />\r\n\r\n            <div><ErrorMessage name=\"year\" /></div>\r\n            <Field className={classes.formField} type=\"number\" name=\"year\" placeholder={Strings.FORM_YEAR_PLACEHOLDER} />\r\n\r\n            <div><ErrorMessage name=\"runtime\" /></div>\r\n            <Field className={classes.formField} type=\"number\" name=\"runtime\" placeholder={Strings.FORM_RUNTIME_PLACEHOLDER} />\r\n\r\n            <div className={classes.buttonsContainer}>\r\n                <Button className={classes.submitButton} name=\"submit\" type=\"submit\"> Submit </Button>\r\n                <Button className={classes.cancelButton} onClick={() => handleClose()}>Cancel</Button>\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\n\r\nconst FormikApp = withFormik({\r\n    mapPropsToValues({ selectedMovieToEdit }) {\r\n        return {\r\n            title: selectedMovieToEdit.title || '',\r\n            director: selectedMovieToEdit.director || '',\r\n            genre: selectedMovieToEdit.genre || '',\r\n            year: selectedMovieToEdit.year || '',\r\n            runtime: selectedMovieToEdit.runtime || '',\r\n        }\r\n    },\r\n\r\n    handleSubmit(values, bag) {\r\n        const { selectedMovieToEdit, handleClose, updateMovie, addMovie, items } = bag.props\r\n        const { setErrors } = bag\r\n\r\n        const movie = {\r\n            title: formatSentence(values.title),\r\n            director: values.director,\r\n            genre: values.genre,\r\n            year: values.year,\r\n            runtime: values.runtime,\r\n        }\r\n\r\n        if (movie.title === '') { // incase title isn't valid after formatted            \r\n            setErrors({ title: \"Only alphabetic letters and numbers are allowed.\" })\r\n            return;\r\n        }\r\n\r\n\r\n        if (selectedMovieToEdit) {\r\n            if (items.find(x => x.title === movie.title && x.id !== selectedMovieToEdit.id)) {\r\n                setErrors({ title: \"This movie is already in the list.\" })\r\n                return;\r\n            }\r\n        } else {\r\n            if (items.find(x => x.title === movie.title)) {\r\n                setErrors({ title: \"This movie is already in the list.\" })\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (selectedMovieToEdit) {\r\n            movie.id = selectedMovieToEdit.id;\r\n            updateMovie(movie);\r\n        } else {\r\n            addMovie(movie);\r\n        }\r\n        handleClose();\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n        title: Yup\r\n            .string()\r\n            .required(\"Title - Required\"),\r\n\r\n        director: Yup\r\n            .string()\r\n            .required(\"Director - Required\"),\r\n\r\n        genre: Yup\r\n            .string()\r\n            .required(\"Genre - Required\"),\r\n\r\n        year: Yup\r\n            .number(\"Invalid Year!\")\r\n            .required(\"Year - Required\")\r\n            .min(1895)\r\n            .max(new Date().getFullYear())\r\n            .integer()\r\n        ,\r\n\r\n        runtime: Yup\r\n            .number()\r\n            .positive(\"Invalid Runtime\")\r\n            .required(\"Runtime - Required\"),\r\n    })\r\n}\r\n)(MovieForm)\r\n\r\nfunction formatSentence(sentence) {\r\n    return sentence.split(' ').map(function (element) {\r\n        element = element.replace(/[^\\w\\s]/gi, '')\r\n        element = element.charAt(0).toUpperCase() + element.slice(1).toLowerCase()\r\n        return element;\r\n    }).join(' ');\r\n}\r\n\r\n\r\nexport default withStyles(styles)(FormikApp)","import React, { Component } from 'react'\r\nimport { Modal } from 'react-bootstrap'\r\nimport MovieForm from './MovieForm'\r\n\r\nclass MovieFormModal extends Component {\r\n    handleClose = () => {\r\n        this.props.toggleMovieForm();\r\n        this.props.resetEditSelectedId();\r\n    }\r\n\r\n    render() {\r\n        const { showMovieForm, selectedMovieToEdit, buttonLabel, addMovie, updateMovie, items } = this.props;\r\n        return (\r\n            <Modal show={showMovieForm} onHide={this.handleClose}>\r\n                <Modal.Header center>\r\n                    {buttonLabel}\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <MovieForm\r\n                        buttonLabel={buttonLabel}\r\n                        selectedMovieToEdit={selectedMovieToEdit}\r\n                        handleClose={this.handleClose}\r\n                        addMovie={addMovie}\r\n                        updateMovie={updateMovie}\r\n                        items={items}\r\n\r\n                    />\r\n                </Modal.Body>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default MovieFormModal","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport MovieFormModal from '../components/MovieFormModal'\r\nimport { bindActionCreators } from 'redux'\r\nimport { toggleMovieForm, resetEditSelectedId, addMovie, updateMovie } from '../actions'\r\n\r\nclass MovieFormContainer extends Component {\r\n    render() {\r\n        const { showMovieForm, toggleMovieForm, selectedMovieToEdit, buttonLabel, resetEditSelectedId\r\n            , addMovie, updateMovie, items } = this.props\r\n        return (\r\n            <MovieFormModal\r\n                selectedMovieToEdit={selectedMovieToEdit}\r\n                showMovieForm={showMovieForm}\r\n                toggleMovieForm={toggleMovieForm}\r\n                buttonLabel={buttonLabel}\r\n                resetEditSelectedId={resetEditSelectedId}\r\n                addMovie={addMovie}\r\n                updateMovie={updateMovie}\r\n                items={items}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { showMovieForm } = state.MovieFormReducer\r\n    const { selectedIdToEdit, items } = state.MoviesReducer\r\n\r\n    if (selectedIdToEdit) {\r\n        const selectedMovieToEdit = items.find(item => item.id === selectedIdToEdit)\r\n\r\n        return {\r\n            selectedMovieToEdit: selectedMovieToEdit,\r\n            resetEditSelectedId: resetEditSelectedId,\r\n            showMovieForm: showMovieForm,\r\n            buttonLabel: 'Edit',\r\n            items: items\r\n        }\r\n    } else {\r\n        return {\r\n            selectedMovieToEdit: '',\r\n            resetEditSelectedId: resetEditSelectedId,\r\n            showMovieForm: showMovieForm,\r\n            buttonLabel: 'Add',\r\n            items: items\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({ toggleMovieForm, resetEditSelectedId, addMovie, updateMovie }, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieFormContainer)\r\n","import React from 'react'\r\nimport { Card, Button } from 'react-bootstrap'\r\nimport * as strings from '../constants/Strings'\r\n\r\nimport withStyles from 'react-jss'\r\n\r\nconst styles = {\r\n    buttonsContainer: {\r\n        display: \"flex\",\r\n    },\r\n    addButton: {\r\n        flex: \"0.3\",\r\n        background: \"black\"\r\n    },\r\n    editButton: {\r\n        flex: \"0.3\",\r\n        marginRight: \"auto\",\r\n        background: \"black\",\r\n    },\r\n    movieCard: {\r\n        width: '17rem',\r\n        margin: 5,\r\n    }\r\n}\r\n\r\n\r\nfunction Movie(props) {\r\n    const { title, year, runtime, genre, director, id } = props.movie;\r\n    const { toggleDeleteConfirm, selectForEdit, toggleMovieForm, classes } = props\r\n\r\n\r\n    const handleCancelClick = () => {\r\n        toggleDeleteConfirm(id)\r\n    }\r\n\r\n    const handleEditClick = () => {\r\n        selectForEdit(id)\r\n        toggleMovieForm();\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.movieCard}>\r\n            {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n            <Card.Body>\r\n                <Card.Title>{title}</Card.Title>\r\n                <Card.Text>Director: {director}</Card.Text>\r\n                <Card.Text>Genre: {genre}</Card.Text>\r\n                <Card.Text>Year: {year}</Card.Text>\r\n                <Card.Text>Runtime: {runtime} minutes</Card.Text>\r\n\r\n                <div className={classes.buttonsContainer} >\r\n                    <Button\r\n                        variant=\"dark\"\r\n                        className={classes.editButton}\r\n                        onClick={() => handleEditClick()}>\r\n                        {strings.EDIT_BUTTON_TEXT}\r\n                    </Button>\r\n\r\n                    <Button\r\n                        variant=\"dark\"\r\n                        className={classes.addButton}\r\n                        onClick={() => handleCancelClick()}>\r\n                        {strings.REMOVE_BUTTON_TEXT}\r\n                    </Button>\r\n                </div>\r\n\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(Movie)","import React, { Component } from 'react'\r\nimport Movie from '../components/Movie';\r\nimport { NO_MOVIES_TEXT } from '../constants/Strings'\r\nimport Row from 'react-bootstrap/Row'\r\nimport withStyles from 'react-jss'\r\n\r\nconst styles = {\r\n    container: {\r\n        margin: \"auto\"\r\n    },\r\n    noMoviesText: {\r\n        margin: \"auto\",\r\n        color: \"white\"\r\n    },\r\n    moviesCardsContainer: {\r\n        justifyContent: \"center\"\r\n    }\r\n}\r\n\r\nclass MoviesWrapper extends Component {\r\n    render() {\r\n        const { items, toggleDeleteConfirm, selectForEdit, toggleMovieForm, classes } = this.props;\r\n        return (\r\n            <div className={classes.container}>\r\n                {\r\n                    items.length === 0 ?\r\n                        <h1 className={classes.noMoviesText}> {NO_MOVIES_TEXT} </h1>\r\n                        :\r\n                        <Row className={classes.moviesCardsContainer}>\r\n                            {items.map(movie =>\r\n                                <Movie\r\n                                    key={movie.id}\r\n                                    movie={movie}\r\n                                    toggleDeleteConfirm={toggleDeleteConfirm}\r\n                                    selectForEdit={selectForEdit}\r\n                                    toggleMovieForm={toggleMovieForm}\r\n                                />\r\n                            )}\r\n                        </Row>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(MoviesWrapper)","export default [\r\n    \"Harry Potter and the Sorcerer's Stone\",\r\n    \"Harry Potter and the Chamber of Secrets\",\r\n    \"Harry Potter and the Prisoner of Azkaban\",\r\n    \"Harry Potter and the Goblet of Fire\",\r\n    \"Harry Potter and the Order of the Phoenix\",\r\n    \"Harry Potter and the Half-Blood Prince\",\r\n    \"Harry Potter and the Deathly Hallows – Part 1\",\r\n    \"Harry Potter and the Deathly Hallows – Part 2\",\r\n]","const BASE_URL = \"http://www.omdbapi.com/\"\r\nconst API_GET_BY_TITLE_QUERY = \"?t=\"\r\nconst API_KEY = \"&apikey=b06899c\"\r\n\r\n\r\n\r\nexport async function fetchMovies(movieTitles) {\r\n    if (movieTitles === undefined)\r\n        return\r\n\r\n    const fetchedMovies = []\r\n    for (let movieTitle of movieTitles) {\r\n        await fetch(`${BASE_URL}${API_GET_BY_TITLE_QUERY}${movieTitle}${API_KEY}`)\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                const { Title, Director, Genre, Year, Runtime } = result;\r\n\r\n                const currentMovie = {\r\n                    'title': Title,\r\n                    'director': Director,\r\n                    'genre': Genre,\r\n                    'year': Year,\r\n                    'runtime': Runtime,\r\n                }\r\n                fetchedMovies.push(currentMovie);\r\n            });\r\n    }\r\n    return fetchedMovies;\r\n}\r\n","import React, { Component } from 'react'\r\nimport { bindActionCreators } from 'redux'\r\nimport { toggleDeleteConfirm, toggleMovieForm, selectForEdit, addMoviesList, toggleIsFetching } from '../actions'\r\nimport { connect } from 'react-redux'\r\n\r\nimport DeleteConfirmationContainer from './DeleteConfirmationContainer'\r\nimport MovieFormContainer from './MovieFormContainer';\r\nimport MoviesWrapper from '../components/MoviesWrapper'\r\nimport MovieTitles from '../constants/MovieTitles'\r\nimport { fetchMovies } from '../api'\r\nimport withStyles from 'react-jss'\r\nimport { LOADING_MOVIES_TEXT } from '../constants/Strings'\r\nimport Row from 'react-bootstrap/Row'\r\n\r\n\r\n\r\nconst styles = {\r\n    loadingText: {\r\n        textAlign: \"center\",\r\n        color: \"white\",\r\n    }\r\n}\r\n\r\nclass MovieContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        const { addMoviesList, toggleIsFetching } = this.props\r\n        toggleIsFetching();\r\n        fetchMovies(MovieTitles).then(moviesList => {\r\n            addMoviesList(moviesList)\r\n            toggleIsFetching()\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { items, isFetching, toggleDeleteConfirm,\r\n            selectForEdit, toggleMovieForm, classes } = this.props\r\n        return (\r\n            isFetching ?\r\n                <h1 className={classes.loadingText}> {LOADING_MOVIES_TEXT} </h1>\r\n                :\r\n                <Row>\r\n                    <MoviesWrapper\r\n                        items={items}\r\n                        toggleDeleteConfirm={toggleDeleteConfirm}\r\n                        selectForEdit={selectForEdit}\r\n                        toggleMovieForm={toggleMovieForm}\r\n                    />\r\n\r\n                    <DeleteConfirmationContainer />\r\n                    <MovieFormContainer />\r\n\r\n                </Row>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { MoviesReducer: { items, isFetching } } = state;\r\n    return {\r\n        items: items,\r\n        isFetching: isFetching,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        toggleDeleteConfirm,\r\n        toggleMovieForm,\r\n        selectForEdit,\r\n        addMoviesList,\r\n        toggleIsFetching\r\n    }, dispatch)\r\n}\r\n\r\n\r\nconst MovieContainerWithStyles = withStyles(styles)(MovieContainer);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieContainerWithStyles);\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport withStyles from 'react-jss'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { removeMovie, addMovie } from '../actions/index'\r\nimport { bindActionCreators } from 'redux'\r\nimport MovieContainer from './MovieContainer';\r\n\r\n\r\nconst styles = {\r\n    root: {\r\n        height: \"calc(100% - 73px)\",\r\n        width: \"100%\",\r\n    }\r\n}\r\n\r\nclass Home extends Component {\r\n\r\n    componentDidMo\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n                <MovieContainer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { MoviesReducer: { items, selectedId } } = state;\r\n    return {\r\n        items: items,\r\n        selectedId: selectedId,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({ addMovie, removeMovie }, dispatch)\r\n}\r\n\r\nHome.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n}\r\n\r\nconst HomeWithStyles = withStyles(styles)(Home);\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(HomeWithStyles);","import React, { Component } from 'react';\nimport withStyles from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport CustomNavbarContainer from './containers/CustomNavbarContainer'\nimport Home from './containers/Home'\n\nconst styles = {\n  App: {\n    width: \"100%\",\n    height: \"100%\",\n  }\n}\n\nclass App extends Component {\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.App}>\n        <CustomNavbarContainer />\n\n        <Home />\n      </div >\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(App);\n","import * as ActionTypes from '../constants/ActionTypes'\r\nimport uuidv4 from 'uuid/v4';\r\nexport const MoviesReducer = (state = {\r\n    items: [],\r\n    isFetching: false,\r\n    selectedIdToEdit: '',\r\n    selectedIdToDelete: ''\r\n\r\n}, action) => {\r\n\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_MOVIE: {\r\n            const movie = {\r\n                ...action.payload.movie,\r\n                title: formatSentence(action.payload.movie.title),\r\n                id: uuidv4()\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                items: [].concat(movie, state.items),\r\n            }\r\n        }\r\n\r\n\r\n\r\n        case ActionTypes.ADD_MOVIES_LIST: {\r\n            const moviesList = action.payload.moviesList;\r\n            const moviesWithId = []\r\n\r\n            for (let movie of moviesList) {\r\n                moviesWithId.push({\r\n                    ...movie,\r\n                    title: formatSentence(movie.title),\r\n                    runtime: movie.runtime.replace(/\\D/g, ''),\r\n                    id: uuidv4(),\r\n                })\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                items: [].concat(moviesWithId, state.items),\r\n            }\r\n        }\r\n\r\n        case ActionTypes.REMOVE_MOVIE: {\r\n            return {\r\n                ...state,\r\n                items: state.items.filter(x => x.id !== state.selectedIdToDelete)\r\n            }\r\n        }\r\n\r\n        case ActionTypes.TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: !state.isFetching\r\n            }\r\n        }\r\n\r\n\r\n        case ActionTypes.UPDATE_MOVIE:\r\n            return {\r\n                ...state,\r\n                items: state.items.map(movie => {\r\n                    if (movie.id === action.payload.movie.id) {\r\n                        return {\r\n                            ...movie,\r\n                            ...action.payload.movie,\r\n                            title: formatSentence(action.payload.movie.title),\r\n\r\n                        }\r\n                    }\r\n                    else return movie;\r\n                })\r\n            };\r\n\r\n        case ActionTypes.RESET_EDIT_SELECTED_ID: {\r\n            return {\r\n                ...state,\r\n                selectedIdToEdit: ''\r\n            }\r\n        }\r\n\r\n        case ActionTypes.SELECT_FOR_EDIT: {\r\n            return {\r\n                ...state,\r\n                selectedIdToEdit: action.payload.selectedId\r\n            }\r\n        }\r\n\r\n\r\n        case ActionTypes.TOGGLE_DELETE_CONFIRM:\r\n            return {\r\n                ...state,\r\n                selectedIdToDelete: action.payload.selectedId\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction formatSentence(sentence) {\r\n    return sentence.split(' ').map(function (element) {\r\n        element = element.replace(/[^\\w\\s]/gi, '')\r\n        element = element.charAt(0).toUpperCase() + element.slice(1).toLowerCase()\r\n        return element;\r\n    }).join(' ');\r\n}","import { TOGGLE_DELETE_CONFIRM, TOGGLE_SET_IS_OPEN } from '../constants/ActionTypes'\r\n\r\nexport const DeleteConfirmationReducer = (state = { isOpen: false }, action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_SET_IS_OPEN:\r\n        case TOGGLE_DELETE_CONFIRM:\r\n            return {\r\n                ...state,\r\n                isOpen: !state.isOpen,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\n\r\nimport { MoviesReducer } from './MoviesReducer'\r\nimport { DeleteConfirmationReducer } from './DeleteConfirmationReducer'\r\nimport { MovieFormReducer } from './MovieFormReducer'\r\n\r\nconst allReducers = combineReducers({\r\n    MoviesReducer,\r\n    DeleteConfirmationReducer,\r\n    MovieFormReducer,\r\n})\r\n\r\nexport default allReducers;","import { TOGGLE_MOVIE_FORM } from '../constants/ActionTypes'\r\n\r\nexport const MovieFormReducer = (state = {\r\n    showMovieForm: false\r\n},\r\n    action) => {\r\n\r\n    switch (action.type) {\r\n        case TOGGLE_MOVIE_FORM:\r\n            return {\r\n                ...state,\r\n                showMovieForm: !state.showMovieForm\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux';\n\nimport reducer from './reducers'\n\n\nconst store = createStore(\n    reducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}